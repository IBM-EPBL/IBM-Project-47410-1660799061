{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Tff6GhCQ9hs3"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=pd.read_csv(\"Mall_Customers.csv\")\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "oWX8m9HI98QH",
        "outputId": "27266f81-60e4-4903-e475-afda10e22237"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0             1    Male   19                  15                      39\n",
              "1             2    Male   21                  15                      81\n",
              "2             3  Female   20                  16                       6\n",
              "3             4  Female   23                  16                      77\n",
              "4             5  Female   31                  17                      40\n",
              "..          ...     ...  ...                 ...                     ...\n",
              "195         196  Female   35                 120                      79\n",
              "196         197  Female   45                 126                      28\n",
              "197         198    Male   32                 126                      74\n",
              "198         199    Male   32                 137                      18\n",
              "199         200    Male   30                 137                      83\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-410684a4-5b47-47b7-abfe-ec75ab6d731a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>196</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>120</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>197</td>\n",
              "      <td>Female</td>\n",
              "      <td>45</td>\n",
              "      <td>126</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>198</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>126</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>199</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>137</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>200</td>\n",
              "      <td>Male</td>\n",
              "      <td>30</td>\n",
              "      <td>137</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-410684a4-5b47-47b7-abfe-ec75ab6d731a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-410684a4-5b47-47b7-abfe-ec75ab6d731a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-410684a4-5b47-47b7-abfe-ec75ab6d731a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Univariate Analysis*"
      ],
      "metadata": {
        "id": "FPZN7G34-MNB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ],
      "metadata": {
        "id": "GzGwYbS1-DfO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.distplot(data.Age)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "Ks8VwGSu-KV1",
        "outputId": "15edf583-f0b5-452e-d960-25e5bc326aab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4cf8ac36d0>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(data.Age)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "5bL66GBN-TkZ",
        "outputId": "9b199588-3d8b-4bfb-a966-ef1dad5dfb54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f4ce1984450>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.pairplot(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 743
        },
        "id": "njykUrLp-Wcs",
        "outputId": "8689c66d-bbd0-4a61-e92a-a8949c51cf11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x7f4cdebfbb90>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 20 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Bivariate Analysis*"
      ],
      "metadata": {
        "id": "2giAXBnQ-dNq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(x=data.Age,y=data.Gender)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "daur377H-cxe",
        "outputId": "852cb03d-3031-4c48-ef0a-5c7b1e029341"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4cde47e350>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.jointplot(x=data.Age,y=data.Gender)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "wirNhV7M-ZMT",
        "outputId": "e290c000-c841-4174-b723-334adbf76ae4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.JointGrid at 0x7f4cdcc5d310>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x432 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(x=data.Age,y=data.Gender)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "wVg55hhQ-lMw",
        "outputId": "3ec402e9-7e88-4474-950a-29e80d20d90f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4cdcb28610>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Multi Variate Analysis*"
      ],
      "metadata": {
        "id": "qePGRWqk_etq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "h6jo6G0N-obU",
        "outputId": "0788f677-7015-4b90-8e4e-2da6483d788d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4cdca41950>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Perform the descriptive statistics on the dataset*"
      ],
      "metadata": {
        "id": "8D56liLi_sdy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "aYMKiWLP_amN",
        "outputId": "291455ef-ea6b-4204-da61-2b54f36c6929"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0           1    Male   19                  15                      39\n",
              "1           2    Male   21                  15                      81\n",
              "2           3  Female   20                  16                       6\n",
              "3           4  Female   23                  16                      77\n",
              "4           5  Female   31                  17                      40"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-82182179-0a39-478e-b684-9ce0bd82e9f1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82182179-0a39-478e-b684-9ce0bd82e9f1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-82182179-0a39-478e-b684-9ce0bd82e9f1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-82182179-0a39-478e-b684-9ce0bd82e9f1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fnW4s47c_2CT",
        "outputId": "674358d8-6b36-4692-e283-fc4f410f0c6b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 200 entries, 0 to 199\n",
            "Data columns (total 5 columns):\n",
            " #   Column                  Non-Null Count  Dtype \n",
            "---  ------                  --------------  ----- \n",
            " 0   CustomerID              200 non-null    int64 \n",
            " 1   Gender                  200 non-null    object\n",
            " 2   Age                     200 non-null    int64 \n",
            " 3   Annual Income (k$)      200 non-null    int64 \n",
            " 4   Spending Score (1-100)  200 non-null    int64 \n",
            "dtypes: int64(4), object(1)\n",
            "memory usage: 7.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hshMm3Jm_6EY",
        "outputId": "d065bd6c-6e79-4ceb-eddb-7fef5f0c553c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                100.50\n",
              "Age                        38.85\n",
              "Annual Income (k$)         60.56\n",
              "Spending Score (1-100)     50.20\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "kk_z7igmAAbj",
        "outputId": "b1777b8c-c649-4932-cc28-e3d5c7c980de"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender   Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0             1  Female  32.0                54.0                    42.0\n",
              "1             2     NaN   NaN                78.0                     NaN\n",
              "2             3     NaN   NaN                 NaN                     NaN\n",
              "3             4     NaN   NaN                 NaN                     NaN\n",
              "4             5     NaN   NaN                 NaN                     NaN\n",
              "..          ...     ...   ...                 ...                     ...\n",
              "195         196     NaN   NaN                 NaN                     NaN\n",
              "196         197     NaN   NaN                 NaN                     NaN\n",
              "197         198     NaN   NaN                 NaN                     NaN\n",
              "198         199     NaN   NaN                 NaN                     NaN\n",
              "199         200     NaN   NaN                 NaN                     NaN\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6c7a702c-8b51-4b5e-bff3-640e42de6258\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Female</td>\n",
              "      <td>32.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>42.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>196</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>197</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>198</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>199</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>200</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c7a702c-8b51-4b5e-bff3-640e42de6258')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6c7a702c-8b51-4b5e-bff3-640e42de6258 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6c7a702c-8b51-4b5e-bff3-640e42de6258');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ak3Pb3M8AFCd",
        "outputId": "c6b17875-1363-4dac-dab6-20b915d7fa88"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                100.5\n",
              "Age                        36.0\n",
              "Annual Income (k$)         61.5\n",
              "Spending Score (1-100)     50.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.skew()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BR6wzauiAKVh",
        "outputId": "f5f3a7f1-a5d5-4aa7-e812-8b98edb6fef9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                0.000000\n",
              "Age                       0.485569\n",
              "Annual Income (k$)        0.321843\n",
              "Spending Score (1-100)   -0.047220\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.kurtosis()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4FrbsPFpAP3Y",
        "outputId": "586ea69a-3510-4081-b6b0-889fa5e68406"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID               -1.200000\n",
              "Age                      -0.671573\n",
              "Annual Income (k$)       -0.098487\n",
              "Spending Score (1-100)   -0.826629\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "d_nGEEVcASVo",
        "outputId": "32e0f2a7-3817-47be-add9-6369e400307f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       CustomerID         Age  Annual Income (k$)  Spending Score (1-100)\n",
              "count  200.000000  200.000000          200.000000              200.000000\n",
              "mean   100.500000   38.850000           60.560000               50.200000\n",
              "std     57.879185   13.969007           26.264721               25.823522\n",
              "min      1.000000   18.000000           15.000000                1.000000\n",
              "25%     50.750000   28.750000           41.500000               34.750000\n",
              "50%    100.500000   36.000000           61.500000               50.000000\n",
              "75%    150.250000   49.000000           78.000000               73.000000\n",
              "max    200.000000   70.000000          137.000000               99.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-102af4ae-6555-4da7-a711-e68148e8e551\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>200.000000</td>\n",
              "      <td>200.000000</td>\n",
              "      <td>200.000000</td>\n",
              "      <td>200.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>100.500000</td>\n",
              "      <td>38.850000</td>\n",
              "      <td>60.560000</td>\n",
              "      <td>50.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>57.879185</td>\n",
              "      <td>13.969007</td>\n",
              "      <td>26.264721</td>\n",
              "      <td>25.823522</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>50.750000</td>\n",
              "      <td>28.750000</td>\n",
              "      <td>41.500000</td>\n",
              "      <td>34.750000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>100.500000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>61.500000</td>\n",
              "      <td>50.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>150.250000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>78.000000</td>\n",
              "      <td>73.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>200.000000</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>137.000000</td>\n",
              "      <td>99.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-102af4ae-6555-4da7-a711-e68148e8e551')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-102af4ae-6555-4da7-a711-e68148e8e551 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-102af4ae-6555-4da7-a711-e68148e8e551');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.std()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TZ2D6Q7aAVjd",
        "outputId": "1014188c-1844-4e95-fdb5-2d0cb55339fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                57.879185\n",
              "Age                       13.969007\n",
              "Annual Income (k$)        26.264721\n",
              "Spending Score (1-100)    25.823522\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Check the missing values and deal with them*"
      ],
      "metadata": {
        "id": "BStedrlCAf6A"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "S6a9CdZaAZKf",
        "outputId": "b6e0015f-c02f-4cf2-abdc-7ee47ea580fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender    Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0         False   False  False               False                   False\n",
              "1         False   False  False               False                   False\n",
              "2         False   False  False               False                   False\n",
              "3         False   False  False               False                   False\n",
              "4         False   False  False               False                   False\n",
              "..          ...     ...    ...                 ...                     ...\n",
              "195       False   False  False               False                   False\n",
              "196       False   False  False               False                   False\n",
              "197       False   False  False               False                   False\n",
              "198       False   False  False               False                   False\n",
              "199       False   False  False               False                   False\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-67e4c7a9-63ac-4a18-a9b2-073a70881afa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67e4c7a9-63ac-4a18-a9b2-073a70881afa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-67e4c7a9-63ac-4a18-a9b2-073a70881afa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-67e4c7a9-63ac-4a18-a9b2-073a70881afa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PRrUqevAAqbY",
        "outputId": "cb7cfc85-9be0-4c39-8c31-d2fe1f66e560"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                False\n",
              "Gender                    False\n",
              "Age                       False\n",
              "Annual Income (k$)        False\n",
              "Spending Score (1-100)    False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EOOZBepUAu9y",
        "outputId": "29d10ed1-7a1e-4657-cdae-127724eab83b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                0\n",
              "Gender                    0\n",
              "Age                       0\n",
              "Annual Income (k$)        0\n",
              "Spending Score (1-100)    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.dropna()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "y_fSpGggAxAh",
        "outputId": "ee3ced8e-abd9-4f2b-9834-1d7d420a0c0d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0             1    Male   19                  15                      39\n",
              "1             2    Male   21                  15                      81\n",
              "2             3  Female   20                  16                       6\n",
              "3             4  Female   23                  16                      77\n",
              "4             5  Female   31                  17                      40\n",
              "..          ...     ...  ...                 ...                     ...\n",
              "195         196  Female   35                 120                      79\n",
              "196         197  Female   45                 126                      28\n",
              "197         198    Male   32                 126                      74\n",
              "198         199    Male   32                 137                      18\n",
              "199         200    Male   30                 137                      83\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-68f8c79c-2883-44ec-8fda-9d2d55b68213\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>196</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>120</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>197</td>\n",
              "      <td>Female</td>\n",
              "      <td>45</td>\n",
              "      <td>126</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>198</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>126</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>199</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>137</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>200</td>\n",
              "      <td>Male</td>\n",
              "      <td>30</td>\n",
              "      <td>137</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68f8c79c-2883-44ec-8fda-9d2d55b68213')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-68f8c79c-2883-44ec-8fda-9d2d55b68213 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-68f8c79c-2883-44ec-8fda-9d2d55b68213');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.fillna(0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "vXxVMOeAA0hk",
        "outputId": "b054cd4a-96f6-407f-b113-d7fd82a375db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0             1    Male   19                  15                      39\n",
              "1             2    Male   21                  15                      81\n",
              "2             3  Female   20                  16                       6\n",
              "3             4  Female   23                  16                      77\n",
              "4             5  Female   31                  17                      40\n",
              "..          ...     ...  ...                 ...                     ...\n",
              "195         196  Female   35                 120                      79\n",
              "196         197  Female   45                 126                      28\n",
              "197         198    Male   32                 126                      74\n",
              "198         199    Male   32                 137                      18\n",
              "199         200    Male   30                 137                      83\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d458b29c-ebc4-47c2-8465-99012fcb8d00\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>196</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>120</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>197</td>\n",
              "      <td>Female</td>\n",
              "      <td>45</td>\n",
              "      <td>126</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>198</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>126</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>199</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>137</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>200</td>\n",
              "      <td>Male</td>\n",
              "      <td>30</td>\n",
              "      <td>137</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d458b29c-ebc4-47c2-8465-99012fcb8d00')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d458b29c-ebc4-47c2-8465-99012fcb8d00 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d458b29c-ebc4-47c2-8465-99012fcb8d00');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.fillna(method ='pad')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RCYipVFkBEK0",
        "outputId": "b0e169ad-a8a5-42d2-ecd2-e97b95dcc9ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0             1    Male   19                  15                      39\n",
              "1             2    Male   21                  15                      81\n",
              "2             3  Female   20                  16                       6\n",
              "3             4  Female   23                  16                      77\n",
              "4             5  Female   31                  17                      40\n",
              "..          ...     ...  ...                 ...                     ...\n",
              "195         196  Female   35                 120                      79\n",
              "196         197  Female   45                 126                      28\n",
              "197         198    Male   32                 126                      74\n",
              "198         199    Male   32                 137                      18\n",
              "199         200    Male   30                 137                      83\n",
              "\n",
              "[200 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3506ba52-20a1-44e9-9454-668d78fd7563\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>196</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>120</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>197</td>\n",
              "      <td>Female</td>\n",
              "      <td>45</td>\n",
              "      <td>126</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>198</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>126</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>199</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>137</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>200</td>\n",
              "      <td>Male</td>\n",
              "      <td>30</td>\n",
              "      <td>137</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3506ba52-20a1-44e9-9454-668d78fd7563')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3506ba52-20a1-44e9-9454-668d78fd7563 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3506ba52-20a1-44e9-9454-668d78fd7563');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data[5:20]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "EySpXChjBJyV",
        "outputId": "7aab9733-e457-4322-cb00-fd8c157b2420"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "5            6  Female   22                  17                      76\n",
              "6            7  Female   35                  18                       6\n",
              "7            8  Female   23                  18                      94\n",
              "8            9    Male   64                  19                       3\n",
              "9           10  Female   30                  19                      72\n",
              "10          11    Male   67                  19                      14\n",
              "11          12  Female   35                  19                      99\n",
              "12          13  Female   58                  20                      15\n",
              "13          14  Female   24                  20                      77\n",
              "14          15    Male   37                  20                      13\n",
              "15          16    Male   22                  20                      79\n",
              "16          17  Female   35                  21                      35\n",
              "17          18    Male   20                  21                      66\n",
              "18          19    Male   52                  23                      29\n",
              "19          20  Female   35                  23                      98"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99243db8-a6ed-484e-a54b-1f536f4f4022\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Female</td>\n",
              "      <td>22</td>\n",
              "      <td>17</td>\n",
              "      <td>76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>18</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>18</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Male</td>\n",
              "      <td>64</td>\n",
              "      <td>19</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Female</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Male</td>\n",
              "      <td>67</td>\n",
              "      <td>19</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Female</td>\n",
              "      <td>58</td>\n",
              "      <td>20</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Female</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Male</td>\n",
              "      <td>37</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Male</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>21</td>\n",
              "      <td>35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Male</td>\n",
              "      <td>20</td>\n",
              "      <td>21</td>\n",
              "      <td>66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Male</td>\n",
              "      <td>52</td>\n",
              "      <td>23</td>\n",
              "      <td>29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Female</td>\n",
              "      <td>35</td>\n",
              "      <td>23</td>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99243db8-a6ed-484e-a54b-1f536f4f4022')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-99243db8-a6ed-484e-a54b-1f536f4f4022 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-99243db8-a6ed-484e-a54b-1f536f4f4022');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Find the outliers and replace them outliers*"
      ],
      "metadata": {
        "id": "_Lr8nBVMBcNX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "q1=data.Age.quantile(0.25)\n",
        "q3=data.Age.quantile(0.75)\n",
        "IQR=q3-q1\n",
        "upper_limit= q3+1.5*IQR\n",
        "lower_limit= q1-1.5*IQR\n",
        "data=data[data.Age<upper_limit]\n",
        "sns.boxplot(data.Age)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "WUCR4LcWBXAZ",
        "outputId": "001ac98d-66e1-4ff0-c42e-62ddff3b5f78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4cdcae2b50>"
            ]
          },
          "metadata": {},
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ax16sFhaB6KZ",
        "outputId": "dc643262-094f-426d-cf92-f629b854d05f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerID                100.5\n",
              "Age                        36.0\n",
              "Annual Income (k$)         61.5\n",
              "Spending Score (1-100)     50.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k4LjpkylCRHQ",
        "outputId": "0f861f04-90d2-4444-937e-9b002574538c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(200, 5)"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Check the categorical columns and perform encoding*"
      ],
      "metadata": {
        "id": "d8GC3Ie3DnQC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder"
      ],
      "metadata": {
        "id": "qRYOA8_NCpST"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "le=LabelEncoder()"
      ],
      "metadata": {
        "id": "3Vnkb4XeDyZF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data[\"Age\"]=le.fit_transform(data['Age'])\n",
        "data[\"Gender\"]=le.fit_transform(data['Gender'])\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "X_dH2gXrD1I9",
        "outputId": "760edd68-365d-438a-9e60-273f9bf43dde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0           1       1    1                  15                      39\n",
              "1           2       1    3                  15                      81\n",
              "2           3       0    2                  16                       6\n",
              "3           4       0    5                  16                      77\n",
              "4           5       0   13                  17                      40"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f72f7b0-6ad8-407e-a7e9-e2efdf151242\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f72f7b0-6ad8-407e-a7e9-e2efdf151242')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7f72f7b0-6ad8-407e-a7e9-e2efdf151242 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7f72f7b0-6ad8-407e-a7e9-e2efdf151242');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "One hot encoding"
      ],
      "metadata": {
        "id": "K3wiaGKOERQd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_main=pd.get_dummies(data,columns=['Age'])\n",
        "data_main.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "id": "7BCrpOhMD3s_",
        "outputId": "fab2b4da-10b8-4a16-bfb3-0c7f509ae481"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID  Gender  Annual Income (k$)  Spending Score (1-100)  Age_0  \\\n",
              "0           1       1                  15                      39      0   \n",
              "1           2       1                  15                      81      0   \n",
              "2           3       0                  16                       6      0   \n",
              "3           4       0                  16                      77      0   \n",
              "4           5       0                  17                      40      0   \n",
              "\n",
              "   Age_1  Age_2  Age_3  Age_4  Age_5  ...  Age_41  Age_42  Age_43  Age_44  \\\n",
              "0      1      0      0      0      0  ...       0       0       0       0   \n",
              "1      0      0      1      0      0  ...       0       0       0       0   \n",
              "2      0      1      0      0      0  ...       0       0       0       0   \n",
              "3      0      0      0      0      1  ...       0       0       0       0   \n",
              "4      0      0      0      0      0  ...       0       0       0       0   \n",
              "\n",
              "   Age_45  Age_46  Age_47  Age_48  Age_49  Age_50  \n",
              "0       0       0       0       0       0       0  \n",
              "1       0       0       0       0       0       0  \n",
              "2       0       0       0       0       0       0  \n",
              "3       0       0       0       0       0       0  \n",
              "4       0       0       0       0       0       0  \n",
              "\n",
              "[5 rows x 55 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c2852aa3-12b5-43ae-ae90-ba344e295b13\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "      <th>Age_0</th>\n",
              "      <th>Age_1</th>\n",
              "      <th>Age_2</th>\n",
              "      <th>Age_3</th>\n",
              "      <th>Age_4</th>\n",
              "      <th>Age_5</th>\n",
              "      <th>...</th>\n",
              "      <th>Age_41</th>\n",
              "      <th>Age_42</th>\n",
              "      <th>Age_43</th>\n",
              "      <th>Age_44</th>\n",
              "      <th>Age_45</th>\n",
              "      <th>Age_46</th>\n",
              "      <th>Age_47</th>\n",
              "      <th>Age_48</th>\n",
              "      <th>Age_49</th>\n",
              "      <th>Age_50</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>81</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 55 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2852aa3-12b5-43ae-ae90-ba344e295b13')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c2852aa3-12b5-43ae-ae90-ba344e295b13 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c2852aa3-12b5-43ae-ae90-ba344e295b13');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_main.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "GYT90yl_EMdY",
        "outputId": "d3130b39-38fa-40f1-bc4f-f68fee10d209"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        CustomerID    Gender  Annual Income (k$)  \\\n",
              "CustomerID                1.000000  0.057400            0.977548   \n",
              "Gender                    0.057400  1.000000            0.056410   \n",
              "Annual Income (k$)        0.977548  0.056410            1.000000   \n",
              "Spending Score (1-100)    0.013835 -0.058109            0.009903   \n",
              "Age_0                    -0.058767  0.089216           -0.050765   \n",
              "Age_1                    -0.012375  0.127478           -0.027737   \n",
              "Age_2                    -0.114547  0.051614           -0.115884   \n",
              "Age_3                    -0.133962 -0.077421           -0.132997   \n",
              "Age_4                    -0.136440 -0.026518           -0.137665   \n",
              "Age_5                    -0.129966 -0.155886           -0.127942   \n",
              "Age_6                    -0.126194  0.017268           -0.116199   \n",
              "Age_7                    -0.001069  0.056350           -0.013628   \n",
              "Age_8                    -0.018278  0.113384           -0.009821   \n",
              "Age_9                     0.028938 -0.037791            0.017497   \n",
              "Age_10                    0.152794  0.089216            0.134629   \n",
              "Age_11                    0.030232 -0.077421            0.018580   \n",
              "Age_12                    0.105792 -0.059194            0.113275   \n",
              "Age_13                   -0.090157 -0.129534           -0.094937   \n",
              "Age_14                    0.217477  0.007069            0.245143   \n",
              "Age_15                    0.079441  0.056350            0.093137   \n",
              "Age_16                    0.130634 -0.012903            0.112705   \n",
              "Age_17                   -0.118435 -0.046646           -0.115114   \n",
              "Age_18                    0.156365 -0.037791            0.137205   \n",
              "Age_19                    0.036693  0.056350            0.020913   \n",
              "Age_20                    0.097474 -0.037791            0.093574   \n",
              "Age_21                    0.075879  0.139218            0.057025   \n",
              "Age_22                    0.010154  0.021257            0.007429   \n",
              "Age_23                    0.150579 -0.089087            0.155135   \n",
              "Age_24                    0.002611  0.012148           -0.002148   \n",
              "Age_25                    0.030993  0.056350            0.024054   \n",
              "Age_26                    0.077466 -0.089087            0.057312   \n",
              "Age_27                   -0.000356 -0.109386            0.041325   \n",
              "Age_28                   -0.008194 -0.026518           -0.007348   \n",
              "Age_29                    0.052291 -0.037791            0.064486   \n",
              "Age_30                   -0.019137  0.180649           -0.014424   \n",
              "Age_31                   -0.078932 -0.114003           -0.069493   \n",
              "Age_32                   -0.014145 -0.077421           -0.011980   \n",
              "Age_33                   -0.021760 -0.089087           -0.019411   \n",
              "Age_34                   -0.006093  0.012148           -0.019411   \n",
              "Age_35                   -0.094003  0.113384           -0.080790   \n",
              "Age_36                   -0.011135 -0.054681           -0.004417   \n",
              "Age_37                   -0.016576 -0.062836           -0.009633   \n",
              "Age_38                    0.074284 -0.062836            0.049894   \n",
              "Age_39                    0.018278  0.012148            0.015115   \n",
              "Age_40                   -0.009574  0.012148           -0.025165   \n",
              "Age_41                    0.021651  0.161165            0.025574   \n",
              "Age_42                   -0.087991 -0.026518           -0.081142   \n",
              "Age_43                   -0.016538  0.012148           -0.015575   \n",
              "Age_44                   -0.112347  0.079973           -0.112451   \n",
              "Age_45                   -0.042650  0.012148           -0.038592   \n",
              "Age_46                    0.013926  0.012148            0.009360   \n",
              "Age_47                   -0.087841  0.089216           -0.082119   \n",
              "Age_48                   -0.023868 -0.026518           -0.018339   \n",
              "Age_49                   -0.052183  0.079973           -0.044807   \n",
              "Age_50                   -0.060058  0.113384           -0.050100   \n",
              "\n",
              "                        Spending Score (1-100)     Age_0     Age_1     Age_2  \\\n",
              "CustomerID                            0.013835 -0.058767 -0.012375 -0.114547   \n",
              "Gender                               -0.058109  0.089216  0.127478  0.051614   \n",
              "Annual Income (k$)                    0.009903 -0.050765 -0.027737 -0.115884   \n",
              "Spending Score (1-100)                1.000000  0.054350 -0.082810 -0.062164   \n",
              "Age_0                                 0.054350  1.000000 -0.029161 -0.022875   \n",
              "Age_1                                -0.082810 -0.029161  1.000000 -0.032686   \n",
              "Age_2                                -0.062164 -0.022875 -0.032686  1.000000   \n",
              "Age_3                                 0.103193 -0.022875 -0.032686 -0.025641   \n",
              "Age_4                                 0.094856 -0.017629 -0.025190 -0.019760   \n",
              "Age_5                                 0.089665 -0.025123 -0.035898 -0.028161   \n",
              "Age_6                                 0.118128 -0.020408 -0.029161 -0.022875   \n",
              "Age_7                                -0.050462 -0.017629 -0.025190 -0.019760   \n",
              "Age_8                                 0.016777 -0.014358 -0.020515 -0.016093   \n",
              "Age_9                                 0.069183 -0.025123 -0.035898 -0.028161   \n",
              "Age_10                                0.109810 -0.020408 -0.029161 -0.022875   \n",
              "Age_11                                0.164114 -0.022875 -0.032686 -0.025641   \n",
              "Age_12                                0.222435 -0.027206 -0.038874 -0.030496   \n",
              "Age_13                                0.108366 -0.029161 -0.041667 -0.032686   \n",
              "Age_14                                0.147977 -0.034464 -0.049245 -0.038631   \n",
              "Age_15                                0.019802 -0.017629 -0.025190 -0.019760   \n",
              "Age_16                               -0.068381 -0.022875 -0.032686 -0.025641   \n",
              "Age_17                                0.115357 -0.031010 -0.044310 -0.034759   \n",
              "Age_18                                0.015703 -0.025123 -0.035898 -0.028161   \n",
              "Age_19                               -0.167036 -0.017629 -0.025190 -0.019760   \n",
              "Age_20                                0.088527 -0.025123 -0.035898 -0.028161   \n",
              "Age_21                                0.165120 -0.017629 -0.025190 -0.019760   \n",
              "Age_22                               -0.018434 -0.025123 -0.035898 -0.028161   \n",
              "Age_23                               -0.086618 -0.014358 -0.020515 -0.016093   \n",
              "Age_24                               -0.123684 -0.014358 -0.020515 -0.016093   \n",
              "Age_25                               -0.077610 -0.017629 -0.025190 -0.019760   \n",
              "Age_26                               -0.143193 -0.014358 -0.020515 -0.016093   \n",
              "Age_27                               -0.060044 -0.017629 -0.025190 -0.019760   \n",
              "Age_28                               -0.138292 -0.017629 -0.025190 -0.019760   \n",
              "Age_29                               -0.148152 -0.025123 -0.035898 -0.028161   \n",
              "Age_30                               -0.052218 -0.022875 -0.032686 -0.025641   \n",
              "Age_31                               -0.055345 -0.027206 -0.038874 -0.030496   \n",
              "Age_32                               -0.027352 -0.022875 -0.032686 -0.025641   \n",
              "Age_33                               -0.014436 -0.014358 -0.020515 -0.016093   \n",
              "Age_34                               -0.113930 -0.014358 -0.020515 -0.016093   \n",
              "Age_35                               -0.098323 -0.014358 -0.020515 -0.016093   \n",
              "Age_36                               -0.080139 -0.020408 -0.029161 -0.022875   \n",
              "Age_37                                0.021466 -0.010127 -0.014470 -0.011351   \n",
              "Age_38                               -0.041830 -0.010127 -0.014470 -0.011351   \n",
              "Age_39                               -0.086618 -0.014358 -0.020515 -0.016093   \n",
              "Age_40                               -0.137340 -0.014358 -0.020515 -0.016093   \n",
              "Age_41                               -0.095390 -0.020408 -0.029161 -0.022875   \n",
              "Age_42                               -0.066431 -0.017629 -0.025190 -0.019760   \n",
              "Age_43                               -0.012485 -0.014358 -0.020515 -0.016093   \n",
              "Age_44                               -0.129894 -0.010127 -0.014470 -0.011351   \n",
              "Age_45                               -0.026141 -0.014358 -0.020515 -0.016093   \n",
              "Age_46                               -0.004682 -0.014358 -0.020515 -0.016093   \n",
              "Age_47                               -0.048250 -0.020408 -0.029161 -0.022875   \n",
              "Age_48                               -0.007346 -0.017629 -0.025190 -0.019760   \n",
              "Age_49                               -0.011558 -0.010127 -0.014470 -0.011351   \n",
              "Age_50                                0.020679 -0.014358 -0.020515 -0.016093   \n",
              "\n",
              "                           Age_3     Age_4     Age_5  ...    Age_41    Age_42  \\\n",
              "CustomerID             -0.133962 -0.136440 -0.129966  ...  0.021651 -0.087991   \n",
              "Gender                 -0.077421 -0.026518 -0.155886  ...  0.161165 -0.026518   \n",
              "Annual Income (k$)     -0.132997 -0.137665 -0.127942  ...  0.025574 -0.081142   \n",
              "Spending Score (1-100)  0.103193  0.094856  0.089665  ... -0.095390 -0.066431   \n",
              "Age_0                  -0.022875 -0.017629 -0.025123  ... -0.020408 -0.017629   \n",
              "Age_1                  -0.032686 -0.025190 -0.035898  ... -0.029161 -0.025190   \n",
              "Age_2                  -0.025641 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_3                   1.000000 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_4                  -0.019760  1.000000 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_5                  -0.028161 -0.021702  1.000000  ... -0.025123 -0.021702   \n",
              "Age_6                  -0.022875 -0.017629 -0.025123  ... -0.020408 -0.017629   \n",
              "Age_7                  -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_8                  -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_9                  -0.028161 -0.021702 -0.030928  ... -0.025123 -0.021702   \n",
              "Age_10                 -0.022875 -0.017629 -0.025123  ... -0.020408 -0.017629   \n",
              "Age_11                 -0.025641 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_12                 -0.030496 -0.023502 -0.033492  ... -0.027206 -0.023502   \n",
              "Age_13                 -0.032686 -0.025190 -0.035898  ... -0.029161 -0.025190   \n",
              "Age_14                 -0.038631 -0.029771 -0.042427  ... -0.034464 -0.029771   \n",
              "Age_15                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_16                 -0.025641 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_17                 -0.034759 -0.026787 -0.038175  ... -0.031010 -0.026787   \n",
              "Age_18                 -0.028161 -0.021702 -0.030928  ... -0.025123 -0.021702   \n",
              "Age_19                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_20                 -0.028161 -0.021702 -0.030928  ... -0.025123 -0.021702   \n",
              "Age_21                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_22                 -0.028161 -0.021702 -0.030928  ... -0.025123 -0.021702   \n",
              "Age_23                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_24                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_25                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_26                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_27                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_28                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_29                 -0.028161 -0.021702 -0.030928  ... -0.025123 -0.021702   \n",
              "Age_30                 -0.025641 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_31                 -0.030496 -0.023502 -0.033492  ... -0.027206 -0.023502   \n",
              "Age_32                 -0.025641 -0.019760 -0.028161  ... -0.022875 -0.019760   \n",
              "Age_33                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_34                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_35                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_36                 -0.022875 -0.017629 -0.025123  ... -0.020408 -0.017629   \n",
              "Age_37                 -0.011351 -0.008748 -0.012467  ... -0.010127 -0.008748   \n",
              "Age_38                 -0.011351 -0.008748 -0.012467  ... -0.010127 -0.008748   \n",
              "Age_39                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_40                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_41                 -0.022875 -0.017629 -0.025123  ...  1.000000 -0.017629   \n",
              "Age_42                 -0.019760 -0.015228 -0.021702  ... -0.017629  1.000000   \n",
              "Age_43                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_44                 -0.011351 -0.008748 -0.012467  ... -0.010127 -0.008748   \n",
              "Age_45                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_46                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "Age_47                 -0.022875 -0.017629 -0.025123  ... -0.020408 -0.017629   \n",
              "Age_48                 -0.019760 -0.015228 -0.021702  ... -0.017629 -0.015228   \n",
              "Age_49                 -0.011351 -0.008748 -0.012467  ... -0.010127 -0.008748   \n",
              "Age_50                 -0.016093 -0.012403 -0.017675  ... -0.014358 -0.012403   \n",
              "\n",
              "                          Age_43    Age_44    Age_45    Age_46    Age_47  \\\n",
              "CustomerID             -0.016538 -0.112347 -0.042650  0.013926 -0.087841   \n",
              "Gender                  0.012148  0.079973  0.012148  0.012148  0.089216   \n",
              "Annual Income (k$)     -0.015575 -0.112451 -0.038592  0.009360 -0.082119   \n",
              "Spending Score (1-100) -0.012485 -0.129894 -0.026141 -0.004682 -0.048250   \n",
              "Age_0                  -0.014358 -0.010127 -0.014358 -0.014358 -0.020408   \n",
              "Age_1                  -0.020515 -0.014470 -0.020515 -0.020515 -0.029161   \n",
              "Age_2                  -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_3                  -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_4                  -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_5                  -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_6                  -0.014358 -0.010127 -0.014358 -0.014358 -0.020408   \n",
              "Age_7                  -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_8                  -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_9                  -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_10                 -0.014358 -0.010127 -0.014358 -0.014358 -0.020408   \n",
              "Age_11                 -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_12                 -0.019140 -0.013500 -0.019140 -0.019140 -0.027206   \n",
              "Age_13                 -0.020515 -0.014470 -0.020515 -0.020515 -0.029161   \n",
              "Age_14                 -0.024246 -0.017102 -0.024246 -0.024246 -0.034464   \n",
              "Age_15                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_16                 -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_17                 -0.021817 -0.015388 -0.021817 -0.021817 -0.031010   \n",
              "Age_18                 -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_19                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_20                 -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_21                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_22                 -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_23                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_24                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_25                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_26                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_27                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_28                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_29                 -0.017675 -0.012467 -0.017675 -0.017675 -0.025123   \n",
              "Age_30                 -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_31                 -0.019140 -0.013500 -0.019140 -0.019140 -0.027206   \n",
              "Age_32                 -0.016093 -0.011351 -0.016093 -0.016093 -0.022875   \n",
              "Age_33                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_34                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_35                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_36                 -0.014358 -0.010127 -0.014358 -0.014358 -0.020408   \n",
              "Age_37                 -0.007125 -0.005025 -0.007125 -0.007125 -0.010127   \n",
              "Age_38                 -0.007125 -0.005025 -0.007125 -0.007125 -0.010127   \n",
              "Age_39                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_40                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_41                 -0.014358 -0.010127 -0.014358 -0.014358 -0.020408   \n",
              "Age_42                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_43                  1.000000 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "Age_44                 -0.007125  1.000000 -0.007125 -0.007125 -0.010127   \n",
              "Age_45                 -0.010101 -0.007125  1.000000 -0.010101 -0.014358   \n",
              "Age_46                 -0.010101 -0.007125 -0.010101  1.000000 -0.014358   \n",
              "Age_47                 -0.014358 -0.010127 -0.014358 -0.014358  1.000000   \n",
              "Age_48                 -0.012403 -0.008748 -0.012403 -0.012403 -0.017629   \n",
              "Age_49                 -0.007125 -0.005025 -0.007125 -0.007125 -0.010127   \n",
              "Age_50                 -0.010101 -0.007125 -0.010101 -0.010101 -0.014358   \n",
              "\n",
              "                          Age_48    Age_49    Age_50  \n",
              "CustomerID             -0.023868 -0.052183 -0.060058  \n",
              "Gender                 -0.026518  0.079973  0.113384  \n",
              "Annual Income (k$)     -0.018339 -0.044807 -0.050100  \n",
              "Spending Score (1-100) -0.007346 -0.011558  0.020679  \n",
              "Age_0                  -0.017629 -0.010127 -0.014358  \n",
              "Age_1                  -0.025190 -0.014470 -0.020515  \n",
              "Age_2                  -0.019760 -0.011351 -0.016093  \n",
              "Age_3                  -0.019760 -0.011351 -0.016093  \n",
              "Age_4                  -0.015228 -0.008748 -0.012403  \n",
              "Age_5                  -0.021702 -0.012467 -0.017675  \n",
              "Age_6                  -0.017629 -0.010127 -0.014358  \n",
              "Age_7                  -0.015228 -0.008748 -0.012403  \n",
              "Age_8                  -0.012403 -0.007125 -0.010101  \n",
              "Age_9                  -0.021702 -0.012467 -0.017675  \n",
              "Age_10                 -0.017629 -0.010127 -0.014358  \n",
              "Age_11                 -0.019760 -0.011351 -0.016093  \n",
              "Age_12                 -0.023502 -0.013500 -0.019140  \n",
              "Age_13                 -0.025190 -0.014470 -0.020515  \n",
              "Age_14                 -0.029771 -0.017102 -0.024246  \n",
              "Age_15                 -0.015228 -0.008748 -0.012403  \n",
              "Age_16                 -0.019760 -0.011351 -0.016093  \n",
              "Age_17                 -0.026787 -0.015388 -0.021817  \n",
              "Age_18                 -0.021702 -0.012467 -0.017675  \n",
              "Age_19                 -0.015228 -0.008748 -0.012403  \n",
              "Age_20                 -0.021702 -0.012467 -0.017675  \n",
              "Age_21                 -0.015228 -0.008748 -0.012403  \n",
              "Age_22                 -0.021702 -0.012467 -0.017675  \n",
              "Age_23                 -0.012403 -0.007125 -0.010101  \n",
              "Age_24                 -0.012403 -0.007125 -0.010101  \n",
              "Age_25                 -0.015228 -0.008748 -0.012403  \n",
              "Age_26                 -0.012403 -0.007125 -0.010101  \n",
              "Age_27                 -0.015228 -0.008748 -0.012403  \n",
              "Age_28                 -0.015228 -0.008748 -0.012403  \n",
              "Age_29                 -0.021702 -0.012467 -0.017675  \n",
              "Age_30                 -0.019760 -0.011351 -0.016093  \n",
              "Age_31                 -0.023502 -0.013500 -0.019140  \n",
              "Age_32                 -0.019760 -0.011351 -0.016093  \n",
              "Age_33                 -0.012403 -0.007125 -0.010101  \n",
              "Age_34                 -0.012403 -0.007125 -0.010101  \n",
              "Age_35                 -0.012403 -0.007125 -0.010101  \n",
              "Age_36                 -0.017629 -0.010127 -0.014358  \n",
              "Age_37                 -0.008748 -0.005025 -0.007125  \n",
              "Age_38                 -0.008748 -0.005025 -0.007125  \n",
              "Age_39                 -0.012403 -0.007125 -0.010101  \n",
              "Age_40                 -0.012403 -0.007125 -0.010101  \n",
              "Age_41                 -0.017629 -0.010127 -0.014358  \n",
              "Age_42                 -0.015228 -0.008748 -0.012403  \n",
              "Age_43                 -0.012403 -0.007125 -0.010101  \n",
              "Age_44                 -0.008748 -0.005025 -0.007125  \n",
              "Age_45                 -0.012403 -0.007125 -0.010101  \n",
              "Age_46                 -0.012403 -0.007125 -0.010101  \n",
              "Age_47                 -0.017629 -0.010127 -0.014358  \n",
              "Age_48                  1.000000 -0.008748 -0.012403  \n",
              "Age_49                 -0.008748  1.000000 -0.007125  \n",
              "Age_50                 -0.012403 -0.007125  1.000000  \n",
              "\n",
              "[55 rows x 55 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-04929a0f-a845-47a2-83d0-ea18e805f2b3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "      <th>Age_0</th>\n",
              "      <th>Age_1</th>\n",
              "      <th>Age_2</th>\n",
              "      <th>Age_3</th>\n",
              "      <th>Age_4</th>\n",
              "      <th>Age_5</th>\n",
              "      <th>...</th>\n",
              "      <th>Age_41</th>\n",
              "      <th>Age_42</th>\n",
              "      <th>Age_43</th>\n",
              "      <th>Age_44</th>\n",
              "      <th>Age_45</th>\n",
              "      <th>Age_46</th>\n",
              "      <th>Age_47</th>\n",
              "      <th>Age_48</th>\n",
              "      <th>Age_49</th>\n",
              "      <th>Age_50</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.057400</td>\n",
              "      <td>0.977548</td>\n",
              "      <td>0.013835</td>\n",
              "      <td>-0.058767</td>\n",
              "      <td>-0.012375</td>\n",
              "      <td>-0.114547</td>\n",
              "      <td>-0.133962</td>\n",
              "      <td>-0.136440</td>\n",
              "      <td>-0.129966</td>\n",
              "      <td>...</td>\n",
              "      <td>0.021651</td>\n",
              "      <td>-0.087991</td>\n",
              "      <td>-0.016538</td>\n",
              "      <td>-0.112347</td>\n",
              "      <td>-0.042650</td>\n",
              "      <td>0.013926</td>\n",
              "      <td>-0.087841</td>\n",
              "      <td>-0.023868</td>\n",
              "      <td>-0.052183</td>\n",
              "      <td>-0.060058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <td>0.057400</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.056410</td>\n",
              "      <td>-0.058109</td>\n",
              "      <td>0.089216</td>\n",
              "      <td>0.127478</td>\n",
              "      <td>0.051614</td>\n",
              "      <td>-0.077421</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>-0.155886</td>\n",
              "      <td>...</td>\n",
              "      <td>0.161165</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>0.079973</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>0.089216</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>0.079973</td>\n",
              "      <td>0.113384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <td>0.977548</td>\n",
              "      <td>0.056410</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.009903</td>\n",
              "      <td>-0.050765</td>\n",
              "      <td>-0.027737</td>\n",
              "      <td>-0.115884</td>\n",
              "      <td>-0.132997</td>\n",
              "      <td>-0.137665</td>\n",
              "      <td>-0.127942</td>\n",
              "      <td>...</td>\n",
              "      <td>0.025574</td>\n",
              "      <td>-0.081142</td>\n",
              "      <td>-0.015575</td>\n",
              "      <td>-0.112451</td>\n",
              "      <td>-0.038592</td>\n",
              "      <td>0.009360</td>\n",
              "      <td>-0.082119</td>\n",
              "      <td>-0.018339</td>\n",
              "      <td>-0.044807</td>\n",
              "      <td>-0.050100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "      <td>0.013835</td>\n",
              "      <td>-0.058109</td>\n",
              "      <td>0.009903</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.054350</td>\n",
              "      <td>-0.082810</td>\n",
              "      <td>-0.062164</td>\n",
              "      <td>0.103193</td>\n",
              "      <td>0.094856</td>\n",
              "      <td>0.089665</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.095390</td>\n",
              "      <td>-0.066431</td>\n",
              "      <td>-0.012485</td>\n",
              "      <td>-0.129894</td>\n",
              "      <td>-0.026141</td>\n",
              "      <td>-0.004682</td>\n",
              "      <td>-0.048250</td>\n",
              "      <td>-0.007346</td>\n",
              "      <td>-0.011558</td>\n",
              "      <td>0.020679</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_0</th>\n",
              "      <td>-0.058767</td>\n",
              "      <td>0.089216</td>\n",
              "      <td>-0.050765</td>\n",
              "      <td>0.054350</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_1</th>\n",
              "      <td>-0.012375</td>\n",
              "      <td>0.127478</td>\n",
              "      <td>-0.027737</td>\n",
              "      <td>-0.082810</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.020515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_2</th>\n",
              "      <td>-0.114547</td>\n",
              "      <td>0.051614</td>\n",
              "      <td>-0.115884</td>\n",
              "      <td>-0.062164</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_3</th>\n",
              "      <td>-0.133962</td>\n",
              "      <td>-0.077421</td>\n",
              "      <td>-0.132997</td>\n",
              "      <td>0.103193</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_4</th>\n",
              "      <td>-0.136440</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>-0.137665</td>\n",
              "      <td>0.094856</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_5</th>\n",
              "      <td>-0.129966</td>\n",
              "      <td>-0.155886</td>\n",
              "      <td>-0.127942</td>\n",
              "      <td>0.089665</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_6</th>\n",
              "      <td>-0.126194</td>\n",
              "      <td>0.017268</td>\n",
              "      <td>-0.116199</td>\n",
              "      <td>0.118128</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_7</th>\n",
              "      <td>-0.001069</td>\n",
              "      <td>0.056350</td>\n",
              "      <td>-0.013628</td>\n",
              "      <td>-0.050462</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_8</th>\n",
              "      <td>-0.018278</td>\n",
              "      <td>0.113384</td>\n",
              "      <td>-0.009821</td>\n",
              "      <td>0.016777</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_9</th>\n",
              "      <td>0.028938</td>\n",
              "      <td>-0.037791</td>\n",
              "      <td>0.017497</td>\n",
              "      <td>0.069183</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.030928</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_10</th>\n",
              "      <td>0.152794</td>\n",
              "      <td>0.089216</td>\n",
              "      <td>0.134629</td>\n",
              "      <td>0.109810</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_11</th>\n",
              "      <td>0.030232</td>\n",
              "      <td>-0.077421</td>\n",
              "      <td>0.018580</td>\n",
              "      <td>0.164114</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_12</th>\n",
              "      <td>0.105792</td>\n",
              "      <td>-0.059194</td>\n",
              "      <td>0.113275</td>\n",
              "      <td>0.222435</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.038874</td>\n",
              "      <td>-0.030496</td>\n",
              "      <td>-0.030496</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.033492</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.013500</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.013500</td>\n",
              "      <td>-0.019140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_13</th>\n",
              "      <td>-0.090157</td>\n",
              "      <td>-0.129534</td>\n",
              "      <td>-0.094937</td>\n",
              "      <td>0.108366</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.041667</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.020515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_14</th>\n",
              "      <td>0.217477</td>\n",
              "      <td>0.007069</td>\n",
              "      <td>0.245143</td>\n",
              "      <td>0.147977</td>\n",
              "      <td>-0.034464</td>\n",
              "      <td>-0.049245</td>\n",
              "      <td>-0.038631</td>\n",
              "      <td>-0.038631</td>\n",
              "      <td>-0.029771</td>\n",
              "      <td>-0.042427</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.034464</td>\n",
              "      <td>-0.029771</td>\n",
              "      <td>-0.024246</td>\n",
              "      <td>-0.017102</td>\n",
              "      <td>-0.024246</td>\n",
              "      <td>-0.024246</td>\n",
              "      <td>-0.034464</td>\n",
              "      <td>-0.029771</td>\n",
              "      <td>-0.017102</td>\n",
              "      <td>-0.024246</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_15</th>\n",
              "      <td>0.079441</td>\n",
              "      <td>0.056350</td>\n",
              "      <td>0.093137</td>\n",
              "      <td>0.019802</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_16</th>\n",
              "      <td>0.130634</td>\n",
              "      <td>-0.012903</td>\n",
              "      <td>0.112705</td>\n",
              "      <td>-0.068381</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_17</th>\n",
              "      <td>-0.118435</td>\n",
              "      <td>-0.046646</td>\n",
              "      <td>-0.115114</td>\n",
              "      <td>0.115357</td>\n",
              "      <td>-0.031010</td>\n",
              "      <td>-0.044310</td>\n",
              "      <td>-0.034759</td>\n",
              "      <td>-0.034759</td>\n",
              "      <td>-0.026787</td>\n",
              "      <td>-0.038175</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.031010</td>\n",
              "      <td>-0.026787</td>\n",
              "      <td>-0.021817</td>\n",
              "      <td>-0.015388</td>\n",
              "      <td>-0.021817</td>\n",
              "      <td>-0.021817</td>\n",
              "      <td>-0.031010</td>\n",
              "      <td>-0.026787</td>\n",
              "      <td>-0.015388</td>\n",
              "      <td>-0.021817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_18</th>\n",
              "      <td>0.156365</td>\n",
              "      <td>-0.037791</td>\n",
              "      <td>0.137205</td>\n",
              "      <td>0.015703</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.030928</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_19</th>\n",
              "      <td>0.036693</td>\n",
              "      <td>0.056350</td>\n",
              "      <td>0.020913</td>\n",
              "      <td>-0.167036</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_20</th>\n",
              "      <td>0.097474</td>\n",
              "      <td>-0.037791</td>\n",
              "      <td>0.093574</td>\n",
              "      <td>0.088527</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.030928</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_21</th>\n",
              "      <td>0.075879</td>\n",
              "      <td>0.139218</td>\n",
              "      <td>0.057025</td>\n",
              "      <td>0.165120</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_22</th>\n",
              "      <td>0.010154</td>\n",
              "      <td>0.021257</td>\n",
              "      <td>0.007429</td>\n",
              "      <td>-0.018434</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.030928</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_23</th>\n",
              "      <td>0.150579</td>\n",
              "      <td>-0.089087</td>\n",
              "      <td>0.155135</td>\n",
              "      <td>-0.086618</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_24</th>\n",
              "      <td>0.002611</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>-0.002148</td>\n",
              "      <td>-0.123684</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_25</th>\n",
              "      <td>0.030993</td>\n",
              "      <td>0.056350</td>\n",
              "      <td>0.024054</td>\n",
              "      <td>-0.077610</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_26</th>\n",
              "      <td>0.077466</td>\n",
              "      <td>-0.089087</td>\n",
              "      <td>0.057312</td>\n",
              "      <td>-0.143193</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_27</th>\n",
              "      <td>-0.000356</td>\n",
              "      <td>-0.109386</td>\n",
              "      <td>0.041325</td>\n",
              "      <td>-0.060044</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_28</th>\n",
              "      <td>-0.008194</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>-0.007348</td>\n",
              "      <td>-0.138292</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_29</th>\n",
              "      <td>0.052291</td>\n",
              "      <td>-0.037791</td>\n",
              "      <td>0.064486</td>\n",
              "      <td>-0.148152</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.035898</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.030928</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>-0.017675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_30</th>\n",
              "      <td>-0.019137</td>\n",
              "      <td>0.180649</td>\n",
              "      <td>-0.014424</td>\n",
              "      <td>-0.052218</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_31</th>\n",
              "      <td>-0.078932</td>\n",
              "      <td>-0.114003</td>\n",
              "      <td>-0.069493</td>\n",
              "      <td>-0.055345</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.038874</td>\n",
              "      <td>-0.030496</td>\n",
              "      <td>-0.030496</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.033492</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.013500</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.019140</td>\n",
              "      <td>-0.027206</td>\n",
              "      <td>-0.023502</td>\n",
              "      <td>-0.013500</td>\n",
              "      <td>-0.019140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_32</th>\n",
              "      <td>-0.014145</td>\n",
              "      <td>-0.077421</td>\n",
              "      <td>-0.011980</td>\n",
              "      <td>-0.027352</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.032686</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.025641</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.028161</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.016093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_33</th>\n",
              "      <td>-0.021760</td>\n",
              "      <td>-0.089087</td>\n",
              "      <td>-0.019411</td>\n",
              "      <td>-0.014436</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_34</th>\n",
              "      <td>-0.006093</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>-0.019411</td>\n",
              "      <td>-0.113930</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_35</th>\n",
              "      <td>-0.094003</td>\n",
              "      <td>0.113384</td>\n",
              "      <td>-0.080790</td>\n",
              "      <td>-0.098323</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_36</th>\n",
              "      <td>-0.011135</td>\n",
              "      <td>-0.054681</td>\n",
              "      <td>-0.004417</td>\n",
              "      <td>-0.080139</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_37</th>\n",
              "      <td>-0.016576</td>\n",
              "      <td>-0.062836</td>\n",
              "      <td>-0.009633</td>\n",
              "      <td>0.021466</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_38</th>\n",
              "      <td>0.074284</td>\n",
              "      <td>-0.062836</td>\n",
              "      <td>0.049894</td>\n",
              "      <td>-0.041830</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_39</th>\n",
              "      <td>0.018278</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>0.015115</td>\n",
              "      <td>-0.086618</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_40</th>\n",
              "      <td>-0.009574</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>-0.025165</td>\n",
              "      <td>-0.137340</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_41</th>\n",
              "      <td>0.021651</td>\n",
              "      <td>0.161165</td>\n",
              "      <td>0.025574</td>\n",
              "      <td>-0.095390</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_42</th>\n",
              "      <td>-0.087991</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>-0.081142</td>\n",
              "      <td>-0.066431</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_43</th>\n",
              "      <td>-0.016538</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>-0.015575</td>\n",
              "      <td>-0.012485</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_44</th>\n",
              "      <td>-0.112347</td>\n",
              "      <td>0.079973</td>\n",
              "      <td>-0.112451</td>\n",
              "      <td>-0.129894</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_45</th>\n",
              "      <td>-0.042650</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>-0.038592</td>\n",
              "      <td>-0.026141</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_46</th>\n",
              "      <td>0.013926</td>\n",
              "      <td>0.012148</td>\n",
              "      <td>0.009360</td>\n",
              "      <td>-0.004682</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_47</th>\n",
              "      <td>-0.087841</td>\n",
              "      <td>0.089216</td>\n",
              "      <td>-0.082119</td>\n",
              "      <td>-0.048250</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.029161</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.022875</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025123</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.020408</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_48</th>\n",
              "      <td>-0.023868</td>\n",
              "      <td>-0.026518</td>\n",
              "      <td>-0.018339</td>\n",
              "      <td>-0.007346</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.025190</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.019760</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.021702</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>-0.015228</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017629</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_49</th>\n",
              "      <td>-0.052183</td>\n",
              "      <td>0.079973</td>\n",
              "      <td>-0.044807</td>\n",
              "      <td>-0.011558</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.014470</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.011351</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.012467</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.005025</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010127</td>\n",
              "      <td>-0.008748</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.007125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age_50</th>\n",
              "      <td>-0.060058</td>\n",
              "      <td>0.113384</td>\n",
              "      <td>-0.050100</td>\n",
              "      <td>0.020679</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.020515</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.016093</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.017675</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.010101</td>\n",
              "      <td>-0.014358</td>\n",
              "      <td>-0.012403</td>\n",
              "      <td>-0.007125</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>55 rows × 55 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04929a0f-a845-47a2-83d0-ea18e805f2b3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-04929a0f-a845-47a2-83d0-ea18e805f2b3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-04929a0f-a845-47a2-83d0-ea18e805f2b3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Split the data into dependent and independent variables*"
      ],
      "metadata": {
        "id": "0D6XFybbFEQp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Y = data.iloc[:, -1]\n",
        "print(Y)\n",
        "X = data.iloc[:, :-1]\n",
        "print(X)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FVfB5LYiFq3r",
        "outputId": "cd1e8137-ef9e-45d9-d5c5-8b49c0398f5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0      39\n",
            "1      81\n",
            "2       6\n",
            "3      77\n",
            "4      40\n",
            "       ..\n",
            "195    79\n",
            "196    28\n",
            "197    74\n",
            "198    18\n",
            "199    83\n",
            "Name: Spending Score (1-100), Length: 200, dtype: int64\n",
            "     CustomerID  Gender  Age  Annual Income (k$)\n",
            "0             1       1    1                  15\n",
            "1             2       1    3                  15\n",
            "2             3       0    2                  16\n",
            "3             4       0    5                  16\n",
            "4             5       0   13                  17\n",
            "..          ...     ...  ...                 ...\n",
            "195         196       0   17                 120\n",
            "196         197       0   27                 126\n",
            "197         198       1   14                 126\n",
            "198         199       1   14                 137\n",
            "199         200       1   12                 137\n",
            "\n",
            "[200 rows x 4 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Scaling the data*"
      ],
      "metadata": {
        "id": "sWxCwOkMF6FK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import scale\n",
        "X = pd.DataFrame(X)\n",
        "X_scaled=pd.DataFrame(scale(X),columns=X.columns)\n",
        "X_scaled.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "5WtiVIXaEQNX",
        "outputId": "0829850a-a9f2-4ae4-e359-663d9986654f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID    Gender       Age  Annual Income (k$)\n",
              "0   -1.723412  1.128152 -1.446834           -1.738999\n",
              "1   -1.706091  1.128152 -1.299798           -1.738999\n",
              "2   -1.688771 -0.886405 -1.373316           -1.700830\n",
              "3   -1.671450 -0.886405 -1.152762           -1.700830\n",
              "4   -1.654129 -0.886405 -0.564618           -1.662660"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-017c8593-2584-4b25-b18e-7aabe86c4165\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.723412</td>\n",
              "      <td>1.128152</td>\n",
              "      <td>-1.446834</td>\n",
              "      <td>-1.738999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.706091</td>\n",
              "      <td>1.128152</td>\n",
              "      <td>-1.299798</td>\n",
              "      <td>-1.738999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.688771</td>\n",
              "      <td>-0.886405</td>\n",
              "      <td>-1.373316</td>\n",
              "      <td>-1.700830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.671450</td>\n",
              "      <td>-0.886405</td>\n",
              "      <td>-1.152762</td>\n",
              "      <td>-1.700830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.654129</td>\n",
              "      <td>-0.886405</td>\n",
              "      <td>-0.564618</td>\n",
              "      <td>-1.662660</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-017c8593-2584-4b25-b18e-7aabe86c4165')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-017c8593-2584-4b25-b18e-7aabe86c4165 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-017c8593-2584-4b25-b18e-7aabe86c4165');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Perform any of the clustering algorithms*"
      ],
      "metadata": {
        "id": "2WcbT5wXbOet"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "*1.K-means*"
      ],
      "metadata": {
        "id": "OWkXdZeEtcB-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn import cluster\n",
        "km_model=cluster.KMeans(n_clusters=3,init='k-means++',random_state=0)"
      ],
      "metadata": {
        "id": "a34mfPDhbSO1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv('Mall_Customers.csv')\n",
        "data.head()\n",
        "new_data =data.iloc[:,:-1]\n",
        "new_data.head()"
      ],
      "metadata": {
        "id": "ZIrvHJ6Vbnix",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "087763d5-c89c-4374-f4dd-88f34454eee1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID  Gender  Age  Annual Income (k$)\n",
              "0           1    Male   19                  15\n",
              "1           2    Male   21                  15\n",
              "2           3  Female   20                  16\n",
              "3           4  Female   23                  16\n",
              "4           5  Female   31                  17"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-75a13f66-668c-4f5c-8a25-aded5bc43baa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Male</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Female</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Female</td>\n",
              "      <td>31</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75a13f66-668c-4f5c-8a25-aded5bc43baa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-75a13f66-668c-4f5c-8a25-aded5bc43baa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-75a13f66-668c-4f5c-8a25-aded5bc43baa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E4pL400lb6Gk",
        "outputId": "5820d9d4-b3fe-4851-dcc9-c5f884fd35a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(200, 4)"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Split the data into training and testing*"
      ],
      "metadata": {
        "id": "5Mb64ox3WtBh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "fPU3INWfFOrC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = np.arange(1,25).reshape(12,2)\n",
        "Y = np.array([0,1,1,0,1,0,0,1,1,0,1,0])\n",
        "X,Y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cCNMmdBPWcO6",
        "outputId": "b7905174-a70d-486b-ba72-84f9587ed518"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([[ 1,  2],\n",
              "        [ 3,  4],\n",
              "        [ 5,  6],\n",
              "        [ 7,  8],\n",
              "        [ 9, 10],\n",
              "        [11, 12],\n",
              "        [13, 14],\n",
              "        [15, 16],\n",
              "        [17, 18],\n",
              "        [19, 20],\n",
              "        [21, 22],\n",
              "        [23, 24]]), array([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]))"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=data.drop(columns=[\"Gender\"],axis=1)\n",
        "x.head()\n",
        "y = data[\"Gender\"]\n",
        "y.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oNAPHq9sZVLk",
        "outputId": "dc252842-f6cb-42ee-a3dc-59370306ac74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1\n",
              "1    1\n",
              "2    0\n",
              "3    0\n",
              "4    0\n",
              "Name: Gender, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_Scaled = pd.DataFrame(scale(x), columns=x.columns)\n",
        "X_Scaled.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "hC_CuUhcZMB4",
        "outputId": "0d161eef-467c-4850-818e-f9064d9a2c9c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerID       Age  Annual Income (k$)  Spending Score (1-100)\n",
              "0   -1.723412 -1.446834           -1.738999               -0.434801\n",
              "1   -1.706091 -1.299798           -1.738999                1.195704\n",
              "2   -1.688771 -1.373316           -1.700830               -1.715913\n",
              "3   -1.671450 -1.152762           -1.700830                1.040418\n",
              "4   -1.654129 -0.564618           -1.662660               -0.395980"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cdb1379a-be1d-49a1-b2ad-a77a86d13eac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.723412</td>\n",
              "      <td>-1.446834</td>\n",
              "      <td>-1.738999</td>\n",
              "      <td>-0.434801</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.706091</td>\n",
              "      <td>-1.299798</td>\n",
              "      <td>-1.738999</td>\n",
              "      <td>1.195704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.688771</td>\n",
              "      <td>-1.373316</td>\n",
              "      <td>-1.700830</td>\n",
              "      <td>-1.715913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.671450</td>\n",
              "      <td>-1.152762</td>\n",
              "      <td>-1.700830</td>\n",
              "      <td>1.040418</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.654129</td>\n",
              "      <td>-0.564618</td>\n",
              "      <td>-1.662660</td>\n",
              "      <td>-0.395980</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cdb1379a-be1d-49a1-b2ad-a77a86d13eac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cdb1379a-be1d-49a1-b2ad-a77a86d13eac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cdb1379a-be1d-49a1-b2ad-a77a86d13eac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train,X_test,Y_train,y_test = train_test_split(X,Y)\n",
        "X_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GEULAU8DWqAx",
        "outputId": "d054939b-9e35-4b99-c4ec-c8739b6c603f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[15, 16],\n",
              "       [ 9, 10],\n",
              "       [ 3,  4],\n",
              "       [21, 22],\n",
              "       [11, 12],\n",
              "       [ 7,  8],\n",
              "       [13, 14],\n",
              "       [ 1,  2],\n",
              "       [23, 24]])"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p5qahaPcW9tY",
        "outputId": "a4d9693f-cd30-4edd-d565-45861ffd089e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 5,  6],\n",
              "       [17, 18],\n",
              "       [19, 20]])"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sDoCBBg3XAer",
        "outputId": "845736a0-21c3-44a8-822b-a9005af6f837"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 1, 0, 0, 0, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "21PNJEsGXCr-",
        "outputId": "9e7f475d-1c06-4fe9-c5c5-8c5828824b12"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train,X_test, Y_train,Y_test =train_test_split(X_Scaled,y,test_size=0.4, random_state=4,stratify=y)\n",
        "X_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ozLcLf1YXGO-",
        "outputId": "6afea78f-7135-4aad-f2a5-d86461c88c55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID       Age  Annual Income (k$)  Spending Score (1-100)\n",
              "197    1.688771 -0.491100            2.497807                0.923953\n",
              "187    1.515563 -0.785172            1.543572                0.691024\n",
              "185    1.480922 -0.638136            1.467233                1.816849\n",
              "28    -1.238432  0.097044           -1.204627               -0.745374\n",
              "162    1.082545 -1.446834            0.780183               -1.754735\n",
              "..          ...       ...                 ...                     ...\n",
              "125    0.441678 -0.564618            0.360319                1.040418\n",
              "47    -0.909338 -0.858690           -0.784763               -0.124229\n",
              "174    1.290394  0.979259            1.047369               -1.444162\n",
              "143    0.753452 -0.491100            0.589336                1.428633\n",
              "36    -1.099866  0.244080           -1.013780               -1.288876\n",
              "\n",
              "[120 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76d2fcbd-da6a-41dc-a160-6caeafe1623a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>1.688771</td>\n",
              "      <td>-0.491100</td>\n",
              "      <td>2.497807</td>\n",
              "      <td>0.923953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>1.515563</td>\n",
              "      <td>-0.785172</td>\n",
              "      <td>1.543572</td>\n",
              "      <td>0.691024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>185</th>\n",
              "      <td>1.480922</td>\n",
              "      <td>-0.638136</td>\n",
              "      <td>1.467233</td>\n",
              "      <td>1.816849</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>-1.238432</td>\n",
              "      <td>0.097044</td>\n",
              "      <td>-1.204627</td>\n",
              "      <td>-0.745374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>1.082545</td>\n",
              "      <td>-1.446834</td>\n",
              "      <td>0.780183</td>\n",
              "      <td>-1.754735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>0.441678</td>\n",
              "      <td>-0.564618</td>\n",
              "      <td>0.360319</td>\n",
              "      <td>1.040418</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>-0.909338</td>\n",
              "      <td>-0.858690</td>\n",
              "      <td>-0.784763</td>\n",
              "      <td>-0.124229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>1.290394</td>\n",
              "      <td>0.979259</td>\n",
              "      <td>1.047369</td>\n",
              "      <td>-1.444162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>0.753452</td>\n",
              "      <td>-0.491100</td>\n",
              "      <td>0.589336</td>\n",
              "      <td>1.428633</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>-1.099866</td>\n",
              "      <td>0.244080</td>\n",
              "      <td>-1.013780</td>\n",
              "      <td>-1.288876</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>120 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76d2fcbd-da6a-41dc-a160-6caeafe1623a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-76d2fcbd-da6a-41dc-a160-6caeafe1623a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-76d2fcbd-da6a-41dc-a160-6caeafe1623a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HAZLJgN7XXxQ",
        "outputId": "80c24234-a0a9-4734-c9af-52b8b3706e43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 5,  6],\n",
              "       [ 7,  8],\n",
              "       [ 1,  2],\n",
              "       [ 3,  4],\n",
              "       [ 9, 10],\n",
              "       [11, 12]])"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1QpWVKuwXcww",
        "outputId": "4d5c442e-ab00-467b-c94a-f3caed4eade7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 0, 1, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2O_VrmscXiwz",
        "outputId": "16a33a63-0a8d-4df1-826c-da984243d026"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 0, 0, 1, 1, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yw1xKJQrXk58",
        "outputId": "b289627a-83a5-4c50-cb40-a3cd1b7745ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSRZYwFsYPFa",
        "outputId": "eed043a7-c505-4e93-f85e-1f7844a97322"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6,)"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9l2XgsVdYQpk",
        "outputId": "bb1e5531-af26-4966-c6e1-6b7c0e649507"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rxW1g7VPYUrw",
        "outputId": "b64deba4-2bd9-40fa-dbe2-4461fd7c82bc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6,)"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "308jBpY9YWap",
        "outputId": "9f723f88-3b44-4310-b518-1ed2b68eb1ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     CustomerID       Age  Annual Income (k$)  Spending Score (1-100)\n",
              "197    1.688771 -0.491100            2.497807                0.923953\n",
              "187    1.515563 -0.785172            1.543572                0.691024\n",
              "185    1.480922 -0.638136            1.467233                1.816849\n",
              "28    -1.238432  0.097044           -1.204627               -0.745374\n",
              "162    1.082545 -1.446834            0.780183               -1.754735"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4f5175cf-5b60-4d59-b074-ce1d7c64fd79\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Annual Income (k$)</th>\n",
              "      <th>Spending Score (1-100)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>1.688771</td>\n",
              "      <td>-0.491100</td>\n",
              "      <td>2.497807</td>\n",
              "      <td>0.923953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>1.515563</td>\n",
              "      <td>-0.785172</td>\n",
              "      <td>1.543572</td>\n",
              "      <td>0.691024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>185</th>\n",
              "      <td>1.480922</td>\n",
              "      <td>-0.638136</td>\n",
              "      <td>1.467233</td>\n",
              "      <td>1.816849</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>-1.238432</td>\n",
              "      <td>0.097044</td>\n",
              "      <td>-1.204627</td>\n",
              "      <td>-0.745374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>1.082545</td>\n",
              "      <td>-1.446834</td>\n",
              "      <td>0.780183</td>\n",
              "      <td>-1.754735</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f5175cf-5b60-4d59-b074-ce1d7c64fd79')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4f5175cf-5b60-4d59-b074-ce1d7c64fd79 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4f5175cf-5b60-4d59-b074-ce1d7c64fd79');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_train.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7w1MN4aaYjSc",
        "outputId": "abcdfc64-d997-4611-c136-522c92af825a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "197    1\n",
              "187    1\n",
              "185    1\n",
              "28     0\n",
              "162    1\n",
              "Name: Gender, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Perform any of the clustering algorithms*"
      ],
      "metadata": {
        "id": "t1P7EAzNaUVm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "*2.Random Forest*\n",
        "\n",
        "*3.KNN*"
      ],
      "metadata": {
        "id": "YRl0000wtlI3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "model = RandomForestClassifier(n_estimators=10,criterion='entropy')\n",
        "model.fit(X_train,Y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c1J4mGOAaDTD",
        "outputId": "5f1541a7-3029-479c-ed82-aeb5d72868a0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestClassifier(criterion='entropy', n_estimators=10)"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_predict = model.predict(X_test)\n",
        "y_predict_train = model.predict(X_train)"
      ],
      "metadata": {
        "id": "E2_Jns4PaXc8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.multioutput import MultiOutputClassifier\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "knn=KNeighborsClassifier(n_neighbors=5)\n",
        "knn.fit(X_train,Y_train)\n",
        "knn.fit(X_test,Y_test)"
      ],
      "metadata": {
        "id": "3jTzrhW4akaJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ef10429a-2637-4a54-c8e4-49125cbc671c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier()"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pred=knn.predict(X_test)\n",
        "pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rRlom0Y0kKl7",
        "outputId": "295f2a02-3ca7-4115-d2d6-68aa4066a513"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Train and test the Model*"
      ],
      "metadata": {
        "id": "54b8Fv5Cla-J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\n",
        "print('Training accuracy: ',accuracy_score(Y_train,y_predict_train))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WX7FQPGIkWNh",
        "outputId": "b249749c-5502-4be6-c8cb-ccf0e1a091e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training accuracy:  0.95\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Testing accuracy: ',accuracy_score(Y_test,y_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jlBH1Uc1komg",
        "outputId": "7a7ba79a-79d8-46f9-d1f4-eae8f0909054"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Testing accuracy:  0.575\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Measure the performance using Evaluation Metrics*"
      ],
      "metadata": {
        "id": "3zuMn0cJlS1G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pd.crosstab(Y_test,y_predict)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "4vjE8UrFk7NH",
        "outputId": "868e7f5c-be35-4cac-88bf-53978d21fd42"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "col_0    0   1\n",
              "Gender        \n",
              "0       35  10\n",
              "1       24  11"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f3c0e17-5be4-493a-98dd-9b1e7b5845b6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>col_0</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>35</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>24</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f3c0e17-5be4-493a-98dd-9b1e7b5845b6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7f3c0e17-5be4-493a-98dd-9b1e7b5845b6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7f3c0e17-5be4-493a-98dd-9b1e7b5845b6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(Y_test,y_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fWI22Yi3lBrr",
        "outputId": "b20e17d1-0091-4224-add7-342e1464be62"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.59      0.78      0.67        45\n",
            "           1       0.52      0.31      0.39        35\n",
            "\n",
            "    accuracy                           0.57        80\n",
            "   macro avg       0.56      0.55      0.53        80\n",
            "weighted avg       0.56      0.57      0.55        80\n",
            "\n"
          ]
        }
      ]
    }
  ]
}